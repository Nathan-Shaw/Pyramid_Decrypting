## First, add your given decryption keys. These consist of multiple pairs of Values and Words, in a single list 'message_file'.

message_file = [(0, 'Word')]

## Then run the following function:

def decode_message(message_file):
    count = 0
    message_file_sorted = sorted(message_file, key=lambda x: x[0])  ## Sort message_file by the first column
    codewords = [pair[1] for pair in message_file_sorted]
    output = []

    for i in range(1, len(message_file)):
        count = count + i
        if 1 <= count - 1 < len(codewords):
            ## Append the current codeword to the output list
            output.append(codewords[count - 1])

    if 0 <= count + 1 < len(codewords):
        ## Append the next codeword to the output list
        output.append(codewords[count + 1])

    ## Return the output list as a single string
    decoded_message = ' '.join(output)
    return decoded_message

## Print the decoded message
print(decode_message(message_file))



## Essentially, the code takes the ordered range of Values and structures them into a pyramid by selecting the last Value of any given row created.
## To create rows, we take our first value, than start a new row with the number of values from the previous row +1
## (the second row then contains Values 2, 3; 3rd row has 4, 5, 6; etc...)
## The pyramid structure looks like this:
## V1
## V2 V3
## V4 V5 V6
## V7 V8 V9 V10
## V11 V12 V13 V14 V15
##...
## until all Values have been processed.
